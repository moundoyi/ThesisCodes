//-------import sub programs------------ 
include "colormap.edp"
include "listconstantisovalues.edp"
load "Element_P3"
load "iovtk"
//-------End import sub program---------


//------------------Fixing parameters------------------
int NumberSteps  = 50;
real h = 40;
real T = 5., dt = T/NumberSteps, 1overdt = 1./dt;
real d = 2,  mu = 0.3;
real r = 1.,  e  = r/20.;
//--------------------End-----------------------------

//-------------------Geometry of the problem----------------------------
border c1(t=0,pi/h){x = r*cos(t)	;y = r*sin(t);label=1;}
border c2(t=pi/h,2*pi){x = r*cos(t)	;y = r*sin(t);label=2;}
border c1e(t=0,pi/h){x = (r+e)*cos(t)	;y = (r+e)*sin(t);label=3;}
border c2e(t=pi/h,2*pi){x = (r+e)*cos(t)	;y = (r+e)*sin(t);label=4;}

mesh UnitDisk	= buildmesh(c1(100)+c2(200) );
mesh Ring	= buildmesh(c1e(100)+ c2e(200) + c1(-100) + c2(-200));
mesh mixte	= Ring + UnitDisk;
//plot(mixte, wait=0);
fespace Vh(Ring,P2);
fespace Xh(UnitDisk,P3);

//----------------Initial Conditions------------------------------
func real u0 (real x, real y)
{
	real theta = atan2(y,x)	;
	if (theta >= 0 && theta <= pi/h) return 1.;
	else return 0.;
}

func v0 = 0.;
//----------------End IC--------------------------------------------

//----------------Defining a macro for the Gradient operator--------
macro Grad(func) [dx(func),dy(func)]//
//----------------End Def-------------------------------------------

//---------------1st equation of the system-------------------------
Vh up = u0(x,y), phi, u, f; // phi test function, up u previous, f right hand side
u = up;
problem heat1(u, phi) =
			int2d(Ring)   ( 1overdt*u*phi  + Grad(u)'*Grad(phi) )
			- int2d(Ring) ( 1overdt*up*phi + f*phi )
			+ on(c1,c1e,u=1.);
//----------------End 1st eq------------------------------------------

//----------------2nd equation of the system---------------------------

Xh v, psi, vp, g; // psi test function, vp v previous, g right hand side
vp = v0;
v=vp;
problem heat2(v, psi) =
			int2d(UnitDisk)( 1overdt*v*psi  + mu*Grad(v)'*Grad(psi) )
			- int1d(UnitDisk,c1,c2,c1e,c2e) ( up*psi )
			- int2d(UnitDisk) ( 1overdt*vp*psi + g*psi )
;
//-----------------End 2nd eq--------------------------------------------

string output,file="fig";
output=file+"mesh.eps";plot(mixte,wait=0,ps=output);

//--------------------Time loop---------------------------------------------
for (int it=0; it<= NumberSteps; it++)
{
        cout <<"----"<<endl;
        cout <<"  Debut de la "<<it<<"e iteration"<<endl;
        // Solve system
        f = u*(1-u);
        g = - d*v;
	plot(u,v,wait=0, fill=1, dim=2, value=1,ps="res"+it+".eps", nbiso=ni,hsv=colormapHSVjet,viso=vi);
        heat1;
        heat2;
      
        // Swap values for the next iteratio
        up[] = u[];
        vp[] = v[];

	//savevtk("heat"+it+".vtk",mixte,u,v);
}

//########################----End Of The Program-----###############################################
