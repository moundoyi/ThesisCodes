//-------Def Parameters---------------------------
int nombredepas  = 150;
real mu =0.001;
real gamma = 1.5;
real beta = 0.008;
real alpha = 0.139;
real T = 300, dt = T/nombredepas, unsurdt = 1./dt;
//-----------------------------------------------

//-------Def Domain------------------------------
border Disk(t=0,2*pi){x=cos(t);y=sin(t);};
mesh Domain =buildmesh(Disk(100));
plot(Domain, wait=1);
fespace Vh(Domain,P2);
//-----------------------------------------------

//#############################-------Def initial conditions--#########################
Vh theta = atan2(y,x)	;
func real U0(real x, real y)
{
	real h=20;
	func p = atan2(y,x);
	if (abs(p)>= 0. && abs(p)<= pi/h && x>0.94) return 1.;
	else return 0.;	
}

//----------------------------------------------
func real ini(real x, real y)
{
    real x1=0.5, x2=0.6, e=0.1;
    if (x<=x2 && x>=x1 && y<= e)
        return 1;
    if (x<x1 && x>x1-e && y<= e)
        return exp(-1/x^2)*exp(-1/(x-x1)^2);
    if (x<x2+e && x>x2 && y<= e)	
        return 1-exp(-1/(x-x2)^2);
    else return 0;
}
//-------------------------------------------------
func real u0(real x, real y)
{
    real e = 0.9;
    if (y<= -e)
         return 1;
    else return 0;
}

func v0=0.;
//-------#############################################################################


macro Grad(func) [dx(func),dy(func)]//

Vh up = U0(x,y), phi, u, f;
u = up;
problem heat1(u, phi) =
			int2d(Domain)   ( unsurdt*u*phi  + mu*Grad(u)'*Grad(phi) )
			- int2d(Domain) ( unsurdt*up*phi + f*phi )
;



Vh v, psi, vp, g;
vp = v0;
v=vp;
problem heat2(v, psi) =
			int2d(Domain)( unsurdt*v*psi  + mu*Grad(v)'*Grad(psi) )
			- int2d(Domain) ( unsurdt*vp*psi + g*psi )
;

//string sortie,fichier="fig";
//sortie=fichier+"mesh.eps";plot(Domain,wait=0,ps=sortie);
// Time loop
for (int it=0; it<= nombredepas; it++)
{
        cout <<"  Debut de la "<<it<<"e iteration"<<endl;
        // Solve system
	f = u*(1-u)*(u-alpha)-u*v;
	g = beta*(u-gamma*v);
	plot(u,wait=0, fill=1, dim=2, value=1);//ps="res"+it+".eps"
	//savevtk("heat"+it+".vtk",Domain,[u,v],u,v);
	//, cmm="u   and   v   at   t = "+it
        heat1;
	heat2;
        up[] = u[];
	vp[] = v[];
}
